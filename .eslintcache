[{"D:\\Projects\\solar-system\\src\\reportWebVitals.js":"1","D:\\Projects\\solar-system\\src\\component\\Sun\\index.tsx":"2","D:\\Projects\\solar-system\\src\\component\\Earth\\index.tsx":"3","D:\\Projects\\solar-system\\src\\App.tsx":"4","D:\\Projects\\solar-system\\src\\index.tsx":"5"},{"size":362,"mtime":1606290306976,"results":"6","hashOfConfig":"7"},{"size":1060,"mtime":1610782291102,"results":"8","hashOfConfig":"7"},{"size":1704,"mtime":1610781733983,"results":"9","hashOfConfig":"7"},{"size":166,"mtime":1610780755236,"results":"10","hashOfConfig":"7"},{"size":478,"mtime":1610780508211,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fiolw5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\solar-system\\src\\reportWebVitals.js",[],"D:\\Projects\\solar-system\\src\\component\\Sun\\index.tsx",["23"],"D:\\Projects\\solar-system\\src\\component\\Earth\\index.tsx",["24","25","26","27","28","29","30"],"import { Scene, Matrix4, TextureLoader, ImageLoader } from 'three';\r\nimport { useRef, useMemo, useState } from 'react';\r\nimport { Canvas, useFrame, useThree, useGraph } from 'react-three-fiber';\r\nimport { OrbitControls, OrthographicCamera, useCamera, Plane } from 'drei';\r\n\r\nconst Earth = (): any => {\r\n  const { gl, scene, camera, size, clock } = useThree();\r\n  const virtualScene = useMemo(() => new Scene(), []);\r\n  const virtualCam: any = useRef();\r\n  const ref: any = useRef();\r\n  const [hover, set] = useState<any>(null);\r\n  const matrix = new Matrix4();\r\n\r\n  useFrame(() => {\r\n    matrix.getInverse(camera.matrix);\r\n    ref.current.quaternion.setFromRotationMatrix(matrix);\r\n    gl.autoClear = true;\r\n    gl.render(scene, camera);\r\n    gl.autoClear = false;\r\n    gl.clearDepth();\r\n    gl.render(virtualScene, virtualCam.current);\r\n  }, 1);\r\n\r\n  return (\r\n    <>\r\n      <OrthographicCamera\r\n        ref={virtualCam}\r\n        makeDefault={false}\r\n        position={[0, 0, 100]}\r\n      />\r\n      <mesh\r\n        ref={ref}\r\n        raycast={useCamera(virtualCam)}\r\n        position={[size.width / 2 - 80, size.height / 2 - 80, 0]}\r\n        onPointerOut={(e) => set(null)}\r\n        onPointerMove={(e: any) => set(Math.floor(e.faceIndex / 2))}\r\n      >\r\n        {[...Array(6)].map((_, index) => (\r\n          <meshLambertMaterial\r\n            attachArray='material'\r\n            key={index}\r\n            color={hover === index ? 'hotpink' : 'white'}\r\n          />\r\n        ))}\r\n        <sphereGeometry attach='geometry' args={[60, 60, 60]} />\r\n      </mesh>\r\n      <ambientLight intensity={0.5} />\r\n      <pointLight position={[10, 10, 10]} intensity={0.5} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n","D:\\Projects\\solar-system\\src\\App.tsx",[],"D:\\Projects\\solar-system\\src\\index.tsx",[],{"ruleId":"31","severity":1,"message":"32","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":13},{"ruleId":"31","severity":1,"message":"35","line":1,"column":26,"nodeType":"33","messageId":"34","endLine":1,"endColumn":39},{"ruleId":"31","severity":1,"message":"36","line":1,"column":41,"nodeType":"33","messageId":"34","endLine":1,"endColumn":52},{"ruleId":"31","severity":1,"message":"37","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":16},{"ruleId":"31","severity":1,"message":"38","line":3,"column":38,"nodeType":"33","messageId":"34","endLine":3,"endColumn":46},{"ruleId":"31","severity":1,"message":"39","line":4,"column":10,"nodeType":"33","messageId":"34","endLine":4,"endColumn":23},{"ruleId":"31","severity":1,"message":"40","line":4,"column":56,"nodeType":"33","messageId":"34","endLine":4,"endColumn":61},{"ruleId":"31","severity":1,"message":"41","line":7,"column":36,"nodeType":"33","messageId":"34","endLine":7,"endColumn":41},"@typescript-eslint/no-unused-vars","'mehdi' is defined but never used.","Identifier","unusedVar","'TextureLoader' is defined but never used.","'ImageLoader' is defined but never used.","'Canvas' is defined but never used.","'useGraph' is defined but never used.","'OrbitControls' is defined but never used.","'Plane' is defined but never used.","'clock' is assigned a value but never used."]